namespace ltr {
/** \page TutorialDataPreprocessors Tutorial page 3 - Data preprocessors
    \ingroup Tutorial

\tableofcontents

\section TutorialDataPreprocessor DataPreprocessor

Preprocesses DataSet, e.g. filter noisy objects, change weights or replicate elements in DataSet.
This can be helpfull for better learning.
DataPreprocessors should not change Object features and FeatureInfo.
Use FeatureConverter for feature convertions (see \ref TutorialFeatureConverters).

You can preprocess your data via DataPreprocessor::apply method.
In the example below DataSampler is used to sample object with specified
indexes from DataSet.

Example: Preprocessing data                      | Output:
-------------------------------------------------|------------------
\include tutorial_data_preprocessor_example1.cpp | \include tutorial_data_preprocessor_example1.out

%The main usage of DataPreprocessors is to preprocess data before learning.
In order to do this just use method Learner::addDataPreprocessor.

For example,

~~~~~~~~~~~~~~~{.cpp}
LinearLearner linear_learner;
linear_learner.addDataPreprocessor(new DataRandomSampler());
linear_learner.learn(data);
~~~~~~~~~~~~~~~

which is equal to

~~~~~~~~~~~~~~~{.cpp}
DataRandomSampler random_sampler();
random_sampler.apply(data, &preprocessed_data);
LinearLearner linear_learner;
linear_learner.learn(preprocessed_data);
~~~~~~~~~~~~~~~

\section DataPreprocessorsList List of all DataPrepocessors

%DataPreprocessor      | Description                                                
-----------------------|------------------------------------------------------------
FakePreprocessor       | Does nothing with input DataSet  
DataSampler            | Samples elements with specififed indices from input DataSet
DataRandomSampler      | Acts as DataSampler with random indices each new applying

**/
}