namespace ltr {
/** \page QualityTable Quality
    \ingroup Tutorial

\tableofcontents

All algorithms in LTR are tested on publicly available datasets. One can find tables with algorithm comparisons for different problems below.

\section RankingProblem Results of ranking algorithms

<table>
<tr><td>Learner</td><td><a href="http://imat2009.yandex.ru/en/datasets">imat2009</a></td><td>Notes</td><td><a href="http://research.microsoft.com/en-us/um/beijing/projects/letor/letor4download.aspx">Letor (MQ2008)</a></td><td>Notes</td></tr>

<tr><td>GP Learner</td><td>3.770800</td><td>population_size = 100, number_of_generations = 20,
measure: DCG, works very slow</td><td>0.5062</td><td>population_size = 100, number_of_generations = 20,
measure: NDCG@10, works very slow</td></tr>

<tr><td>GP Learner</td><td>3.763814</td><td>population_size = 100, number_of_generations = 100,
measure: DCG, works very slow</td><td>-</td><td>-</td></tr>

<tr><td>GP Learner (old version)</td><td>3.711743</td><td>population_size = 10, number_of_generations = 3,
measure: DCG, works very slow</td><td>-</td><td>-</td></tr>

<tr><td>GP Learner (old version)</td><td>3.707123</td><td>population_size = 10, number_of_generations = 3,
measure: PFound, works very slow</td><td>-</td><td>-</td></tr>

<tr><td>GP Learner (old version)</td><td>3.731683</td><td>population_size = 10, number_of_generations = 3,
measure: NDCG, works very slow</td><td>-</td><td>-</td></tr>

<tr><td>LinearLearner</td><td>4.178930</td><td>Measure: BinaryClassificationAccuracy, Splitter: LOO</td><td>0.4870</td><td>measure: NDCG@10</td></tr>
<tr><td>BestFeatureLearner</td><td>3.018777</td><td>Measure: BinaryClassificationAccuracy, Splitter: LOO</td><td>0.4945</td><td>measure: NDCG@10</td></tr>
<tr><td>BayesianLearner with NormalNaiveBayesLearner</td><td>-</td><td>-</td><td>0.1559</td><td>measure: NDCG@10</td></tr>
<tr><td>NNLearner</td><td>-</td><td>-</td><td>0.2953</td><td>N = 3, measure: NDCG@10</td></tr>
<tr><td>AdaRank over BestFeatureLearners</td><td>-</td><td>-</td><td>0.4959</td><td>measure: NDCG@10</td></tr>
</table>

\section ClassificationProblem Results of classification algorithms

<table>
<tr><td>Learner</td>
<td><a href="http://archive.ics.uci.edu/ml/datasets/Liver+Disorders">Liver Disorders</a></td>
<td><a href="http://archive.ics.uci.edu/ml/datasets/Statlog+%28Australian+Credit+Approval%29">Australian</a></td>
<td><a href="http://archive.ics.uci.edu/ml/datasets/Statlog+%28German+Credit+Data%29">German</a></td>
<td>Notes</td></tr>

<tr><td>LinearLearner</td><td>0.695652</td><td>0.857971</td><td>0.773000</td><td>Measure: BinaryClassificationAccuracy, Splitter: LOO</td></tr>
<tr><td>BestFeatureLearner</td><td>0.57971</td><td>0.444928</td><td>0.3</td><td>Measure: BinaryClassificationAccuracy, Splitter: LOO</td></tr>
<tr><td>NNLearner</td><td>0.648256</td><td>0.785507</td><td>0.681</td><td>Measure: Accuracy, Splitter: LOO, 1 neighbor</td></tr>
<tr><td>BayesianLearner with NormalNaiveBayesLearner</td><td>0.553623</td><td>0.804348</td><td>0.723</td><td>Measure: BinaryClassificationAccuracy, Splitter: LOO</td></tr>
<tr><td>BayesianLearner with FisherDiscriminantLearner</td><td>0.542029</td><td>0.650725</td><td>0.628</td><td>Measure: BinaryClassificationAccuracy, Splitter: LOO</td></tr>
<tr><td>BayesianLearner with QuadraticDiscriminantLearner</td><td>0.637681</td><td>0.828986</td><td>0.699</td><td>Measure: BinaryClassificationAccuracy, Splitter: LOO</td></tr>
<tr><td>DecisionTreeLearner with ID3Splitter</td><td>0.666639</td><td>0.86087</td><td>0.74</td>
<td>Measure: BinaryClassificationAccuracy, Splitter: KFoldSimpleSplitter

LeafGenerator: MostCommonLabelLeafGenerator

StopSplittingCriteria: SameLabelStopSplittingCriteria, DataSizeStopSplittingCriteria</td></tr>
<tr><td>DecisionTreeLearner with ObliviousTreeSplitter</td><td>0.675378</td><td>0.855072</td><td>0.731</td>
<td>Measure: BinaryClassificationAccuracy, Splitter: KFoldSimpleSplitter

LeafGenerator: MostCommonLabelLeafGenerator

StopSplittingCriteria: SameLabelStopSplittingCriteria, DataSizeStopSplittingCriteria</td></tr>
</table>

**/
}