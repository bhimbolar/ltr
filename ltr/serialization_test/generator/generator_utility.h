// Copyright 2012 Yandex

#ifndef LTR_SERIALIZATION_TEST_GENERATOR_GENERATOR_UTILITY_H_
#define LTR_SERIALIZATION_TEST_GENERATOR_GENERATOR_UTILITY_H_

#include <string>
#include <sstream>

#include "ltr/data/data_set.h"
#include "ltr/learners/learner.h"
#include "ltr/feature_converters/feature_converter_learner.h"

using std::string;

using ltr::DataSet;
using ltr::Object;
using ltr::Learner;
using ltr::FeatureConverterLearner;

namespace serialization_test {
  /**
   * \brief Generator of tests for serializable objects.
   */
  class Generator {
  public:
    /**
     * \brief Constructs generator.
     */
    Generator();
    /**
     * \brief Returns code of unittests.
     */ 
    string code() const;
    /**
     * \brief Writes unittests to file.
     * \param filename filename for writing unittests.
     */
    void write(const char* filename) const;
    /**
     * \brief Adds unittest for scorer serialization to generator.
     * \param learner learner which creates serializing scorer.
     * \param test_name name of the generating unittest.
     */
    void addScorerTest(Learner<Object>::Ptr learner, const string& test_name);
    /**
     * \brief Adds unittest for feature converter serialization to generator.
     * \param feature_converter_learner learner which creates serializing
     *   feature_converter.
     * \param test_name name of the generating unittest.
     */
    void addFeatureConverterTest(
      FeatureConverterLearner<Object>::Ptr feature_converter_learner,
      const string& test_name);
  private:
    /**
     * \brief Adds includes to unittests code.
     */
    void addIncludes();
    /**
     * \brief Adds service class for unittest code.
     */
    void addFixture();
    /**
     * \brief Adds checking labels function.
     * 
     * This function checks equality of labels predicted by serialized 
     * object and labels from test_data.
     */
    void addCheckLabelsFunction();
    /**
     * \brief Adds checking features function.
     * 
     * This function checks equality of features generated by serialized 
     * object and processed_data dataset.
     */
    void addCheckFeaturesFunction(const DataSet<Object>& processed_data);
    /**
     * \brief Adds begin comment of the block.
     * \param message text of the message placed in comment
     */
    void addBeginBlockComment(const string& message);
    /**
     * \brief Adds end comment of the block.
     * \param message text of the message placed in comment
     */
    void addEndBlockComment(const string& message);

    /**
     * Code of tester file.
     */
    std::stringstream tester_code;
    /**
     * Number of added to generator objects. Needed to avoid name collisions
     */
    int serializating_object_number;
    /**
     * Train dataset
     */
    const DataSet<Object> train_data;
    /**
     * Test dataset
     */
    const DataSet<Object> test_data;
  };
};

#endif  // LTR_SERIALIZATION_TEST_GENERATOR_GENERATOR_UTILITY_H_
